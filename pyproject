#!/bin/zsh

PROJECT_PATH="${HOME}/Projects/_python/"
JUPYTER=false

while test $# -gt 0; do
  case "$1" in
    -j|--jupyter)
      shift
      JUPYTER=true
      break
      ;;
      *)
      break
      ;;
  esac
done

slugName() {
    PROJECT_NAME=$(echo "$@" | iconv -t ascii//TRANSLIT | sed -E 's/[~\^]+//g' | sed -E 's/[^a-zA-Z0-9]+/-/g' | sed -E 's/^-+\|-+$//g' | tr A-Z a-z)
    # PROJECT_PATH="${PROJECTS_PATH}${PROJECT_NAME}"
}

slugName $1

mkdir -p "${PROJECT_PATH}${PROJECT_NAME}"

cd "${PROJECT_PATH}${PROJECT_NAME}"

python3 -m venv ".${PROJECT_NAME}-env"

source ".${PROJECT_NAME}-env/bin/activate"

if $JUPYTER
then
	pip install jupyterlab
fi

cat > "${PROJECT_NAME}.sublime-project" << EOF
{
	"build_systems":
	[
		{
			"file_regex": "^[ ]*File \"(...*?)\", line ([0-9]*)",
			"name": "Anaconda Python Builder",
			"selector": "source.python",
			"shell_cmd": "${PROJECT_PATH}${PROJECT_NAME}/.${PROJECT_NAME}-env/bin/python -u \"\$file\""
		}
	],
	"folders":
	[
		{
			"path": "."
		}
	],
	"settings": {
		"python_interpreter": "${PROJECT_PATH}${PROJECT_NAME}/.${PROJECT_NAME}-env/bin/python"
	}
}
EOF

cat > "${PROJECT_NAME}.sublime-workspace" << EOF
{
	"build_system": "Anaconda Python Builder",
	"menu_visible": true,
	"project": "${PROJECT_NAME}.sublime-project",
	"save_all_on_build": true,
	"show_minimap": false
}
EOF

touch main.py

cat > readme.md << EOF
# ${1}
EOF

cat > .gitignore << EOF
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST
*.manifest
*.spec
pip-log.txt
pip-delete-this-directory.txt
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/
*.mo
*.pot
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
instance/
.webassets-cache
.scrapy
docs/_build/
.pybuilder/
target/
.ipynb_checkpoints
profile_default/
ipython_config.py
__pypackages__/
celerybeat-schedule
celerybeat.pid
*.sage.py
.*-env
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
EOF

git init

subl . --project "${PROJECT_NAME}.sublime-project"
open .
